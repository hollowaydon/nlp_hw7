import 'byte.grm' as bytelib;     
import 'tags.grm' as tags;  

Sigma = (tags.Tags) | (bytelib.kBytes);
SigmaStar = Optimize[Sigma*];

# YOU WILL FILL IN THE REST
export NP = Optimize[("Art"|"Quant")? "Adj"* "Noun"+];
MakeNmodHelper = Optimize["Noun":"Nmod"];
#[ T, Left, Right, Any, Dir, Force]
export MakeNmod = CDRewrite[MakeNmodHelper, "", "Noun", SigmaStar, 'ltr', 'obl'];
export TransformNP = Optimize[NP @ MakeNmod];
export BracketNP = ("" : "<") NP ("" : ">");
export Brackets1 = Optimize[SigmaStar (BracketNP SigmaStar)*];
export Brackets2 = CDRewrite[BracketNP, "", "", SigmaStar,'sim','obl'];
export BracketTransform = Brackets2 @ CDRewrite[TransformNP, "<", ">", SigmaStar,'sim','obl'];
BracketResultsHelper = Optimize["Quant" "Noun"+ "Verb"];
export BracketResults = Project[BracketResultsHelper @ BracketTransform, 'output'];
# export CrossBrac = "":BracketResults; # Printout helper FST
# -----Extra Credit 6(g)-----
export ReplaceNmod = Optimize[ SigmaStar ( ("Noun":"Nmod") SigmaStar)* ];
export NounFilter = Optimize[ SigmaStar - (SigmaStar ("Noun" ("Noun" | "Nmod")) SigmaStar) ];
export NmodFilter = Optimize[ SigmaStar - ( SigmaStar ( "Nmod" ( SigmaStar - ( "Noun" | "Nmod" SigmaStar )))) ];
export TransformNP2 = ReplaceNmod @ NounFilter @ NmodFilter;
# ---------------------------